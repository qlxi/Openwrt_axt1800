#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build AXT-1800

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH для действий'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/LiBwrt/openwrt-6.x.git
  REPO_BRANCH: main
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: ./config/axt1800.config
  DIY_P1_SH: ./sh/axt-part1.sh
  DIY_P2_SH: ./sh/axt-part2.sh
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Europe/Moscow

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions: 
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Инициализировать среду
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://raw.githubusercontent.com/Gzxhwq/OpenWrt-Actions/main/depends-ubuntu-2204)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Клонировать исходный код
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --branch $REPO_BRANCH $REPO_URL openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Загрузить пользовательские источники
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Источник обновления
      run: cd openwrt && ./scripts/feeds update -a

    - name: Источник установки
      run: cd openwrt && ./scripts/feeds install -a

    - name: Загрузить пользовательскую конфигурацию
      run: |
        [ -e files ] && mv ./files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
        make defconfig

    - name: SSH для действий
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Скачать пакет
      id: package
      run: |
        cd openwrt
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Скомпилировать прошивку
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) 线程编译"
        echo "y" | make -j$(expr $(nproc) + 1) || echo "y" | make -j1 V=s
        echo "compile-status=success" >> $GITHUB_ENV
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        cat $GITHUB_ENV
        echo "compile=success" >> $GITHUB_OUTPUT
        if [ -s DEVICE_NAME ]; then
          echo "device-name=$(cat DEVICE_NAME)" >> $GITHUB_OUTPUT
        fi
        echo "file-date=$(date +"%Y%m%d%H%M")" >> $GITHUB_OUTPUT

    - name: Проверьте использование пространства
      if: (!cancelled())
      run: df -hT

    - name: 上传 bin 目录
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.compile == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin_${{ steps.compile.outputs.device-name }}_${{ steps.compile.outputs.file-date }}
        path: openwrt/bin


    - name: Организация файлов
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_ENV
        echo "organize=success" >> $GITHUB_OUTPUT

    - name: Загрузите каталог прошивки
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.organize == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Создание тегов выпуска
      id: tag
      if: steps.compile.outputs.compile == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "生成发布标签..."
        echo "release_tag=axt1800-$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_ENV
        echo "release_tag=axt1800-$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT

        touch release.txt
        echo "tag=success" >> $GITHUB_ENV
        echo "tag=success" >> $GITHUB_OUTPUT

    - name: Загрузите прошивку для релиза
      uses: softprops/action-gh-release@v2
      if: steps.tag.outputs.release_tag && steps.compile.outputs.compile == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Удалить запуск рабочего процесса
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Удалить старую версию
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: steps.tag.outputs.release_tag && env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 10
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

